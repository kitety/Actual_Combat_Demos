{"version":3,"file":"single-spa.js","sources":["../../src/application/app.helpers.js","../../src/lifecycles/bootstrap.js","../../src/lifecycles/load.js","../../src/lifecycles/mount.js","../../src/lifecycles/unmount.js","../../src/start.js","../../src/navigations/navigator-events.js","../../src/navigations/reroute.js","../../src/application/app.js","../../src/single-spa.js"],"sourcesContent":["// 应用状态\nexport const NOT_LOADED = \"NOT_LOADED\"; // 未加载 初始状态\nexport const LOADING_SOURCE_CODE = \"LOADING_SOURCE_CODE\"; // 加载资源\nexport const NOT_BOOTSTRAPPED = \"NOT_BOOTSTRAPPED\"; // 还没有调用bootstrap方法\nexport const BOOTSTRAPPING = \"BOOTSTRAPPING\"; // 启动中\nexport const NOT_MOUNTED = \"NOT_MOUNTED\"; // 没有挂载 没有调用mount方法\nexport const MOUNTING = \"MOUNTING\"; // 正在挂载中\nexport const MOUNTED = \"MOUNTED\"; // 挂载完毕\nexport const UPDATING = \"UPDATING\"; // 更新中\nexport const UN_MOUNTING = \"UN_MOUNTING\"; // 解除挂载中\nexport const UN_LOADING = \"UN_LOADING\"; // 完全卸载中\nexport const LOAD_ERR = \"LOAD_ERR\"; // 资源加载失败\nexport const SKIP_BECAUSE_BROKEN = \"SKIP_BECAUSE_BROKEN\"; // 出错\n\n// 当前应用是否被激活\nexport const isActive = (app) => {\n  // 挂载完了才是真正的被激活\n  return app.status === MOUNTED;\n};\n// 当前这个应用是否要被激活\nexport const isShouldBeActive = (app) => {\n  // true 应用应该初始化等一系列操作\n  return app.activeWhen(window.location);\n};\n","import {\n  BOOTSTRAPPING,\n  NOT_BOOTSTRAPPED,\n  NOT_MOUNTED,\n} from \"../application/app.helpers\";\n\nexport const toBootstrapPromise = async (app) => {\n  // 没启动过 不加载\n  if (app.status !== NOT_BOOTSTRAPPED) {\n    return app;\n  }\n  // 启动中\n  app.status = BOOTSTRAPPING;\n  await app.bootstrap(app.customProps);\n  app.status = NOT_MOUNTED;\n  return app;\n};\n","import {\n  LOADING_SOURCE_CODE,\n  NOT_BOOTSTRAPPED,\n} from \"../application/app.helpers\";\n\n// 数组转换为Promise的执行\n// 通过Promise来链式调用  多个方法组合成一个方法\nconst flattenFnArr = (fns) => {\n  fns = Array.isArray(fns) ? fns : [fns];\n  return (props) => {\n    return fns.reduce((p, fn) => p.then(() => fn(props)), Promise.resolve());\n  };\n};\n\nexport const toLoadPromise = async (app) => {\n  //  同步一次 异步一次  增加属性\n  if (app.loadPromise) {\n    return app.loadPromise;\n  }\n  return (app.loadPromise = Promise.resolve().then(async () => {\n    app.status = LOADING_SOURCE_CODE; // 加载 loadApp\n    // bootstrap 数组或者方法\n    const { bootstrap, mount, unmount } = await app.loadApp(app.customProps);\n    app.status = NOT_BOOTSTRAPPED; // 还没有启动 bootstrap\n\n    // 将多个Promise组合到一起\n    // 这三个是三个Promise\n    app.bootstrap = flattenFnArr(bootstrap);\n    app.mount = flattenFnArr(mount);\n    app.unmount = flattenFnArr(unmount);\n    app.loadPromise = undefined;\n    return app;\n  }));\n};\n","import { MOUNTED, MOUNTING, NOT_MOUNTED } from \"../application/app.helpers\";\n\nexport const toMountPromise = async (app) => {\n  // 没启动过 不加载\n  if (app.status !== NOT_MOUNTED) {\n    return app;\n  }\n  // 启动中\n  app.status = MOUNTING;\n  await app.mount(app.customProps);\n  app.status = MOUNTED;\n  return app;\n};\n","import { MOUNTED, NOT_MOUNTED, UN_MOUNTING } from \"../application/app.helpers\";\n\nexport const toUnmountPromise = async (app) => {\n  if (app.status === MOUNTED) {\n    app.status = UN_MOUNTING; // 卸载中\n    await app.unmount(app.customProps);\n    app.status = NOT_MOUNTED; // 未挂载\n  }\n  // 当前应用没有被挂载就什么都不做\n  return app;\n};\n","import { reroute } from \"./navigations/reroute\";\n\nexport let started = false;\nexport const start = () => {\n  // 挂载应用\n  // 除了去加载应用，还要去挂载应用\n  started = true;\n  reroute();\n};\n","// hashchange history api\n\nimport { reroute } from \"./reroute\";\n\n// 监听路由方法\nexport const routingEventListeningTo = [\"hashchange\", \"popstate\"];\n\nconst urlReroute = (...reset) => {\n  reroute([], reset);\n};\n\nconst capturedEventListeners = {\n  hashchange: [],\n  popstate: [],\n};\n\n// 我们处理应用加载的逻辑实在最前面\nwindow.addEventListener(\"hashchange\", urlReroute);\nwindow.addEventListener(\"popstate\", urlReroute);\n\nconst originAddEventListener = window.addEventListener;\nconst originRemoveEventListener = window.removeEventListener;\n\nwindow.addEventListener = function (eventName, fn) {\n  if (\n    routingEventListeningTo.includes(eventName) &&\n    !capturedEventListeners[eventName].includes(fn)\n  ) {\n    capturedEventListeners[eventName].push(fn);\n    return;\n  }\n  return originAddEventListener.apply(this, arguments);\n};\nwindow.removeEventListener = function (eventName, fn) {\n  if (routingEventListeningTo.includes(eventName)) {\n    capturedEventListeners[eventName] = capturedEventListeners[\n      eventName\n    ].filter((item) => item !== fn);\n    return;\n  }\n  return originAddEventLoriginRemoveEventListeneristener.apply(this, arguments);\n};\n\n// 绑定自己的路由事件\n// 我们应用切换后还要处理原来的方法  需要在应用切换后执行\n/**\n * hash 路由 hash变化时可以切换\n * 浏览器路由是 基于 h5 api  切换时不会触发popState\n */\nfunction patchUpdateState(update, methodName) {\n  return function () {\n    const urlBefore = window.location.href;\n    update.apply(this, arguments); // 调用切换\n    const afterBefore = window.location.href;\n    if (urlBefore !== afterBefore) {\n      // 重新加载应用 传入 事件源\n      urlReroute(new PopStateEvent(\"popstate\"));\n    }\n  };\n}\nwindow.history.pushState = patchUpdateState(\n  window.history.pushState,\n  \"pushState\"\n);\nwindow.history.replaceState = patchUpdateState(\n  window.history.replaceState,\n  \"replaceState\"\n);\n","import { getAppChanges } from \"../application/app\";\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap\";\nimport { toLoadPromise } from \"../lifecycles/load\";\nimport { toMountPromise } from \"../lifecycles/mount\";\nimport { toUnmountPromise } from \"../lifecycles/unmount\";\nimport { started } from \"../start\";\nimport './navigator-events'\n\n// 核心应用处理方法\nexport const reroute = () => {\n  /**\n   * 需要获取要加载的应用\n   * 需要获取要被挂载的应用\n   * 哪些应用需要被卸载\n   */\n\n  const { appToUnmount, appToLoad, appToMount } = getAppChanges();\n  console.log(\n    \"appToUnmount, appToLoad, appToMount: \",\n    appToUnmount,\n    appToLoad,\n    appToMount\n  );\n\n  if (started) {\n    // 调用start()\n    // app 挂载\n\n    console.log(\"调用start\");\n    // 根据路径来装载应用\n    return performAppChanges();\n  } else {\n    // 没调用start()\n    // 注册应用时  需要预先加载\n    console.log(\"调用register\");\n    return loadApps(); // 预先加载应用\n  }\n};\n// 预先加载应用\nconst loadApps = async () => {\n  const { appToLoad } = getAppChanges();\n  // appToLoad 是Promise\n  // 获取到bootstrap mount unmount, 放到app\n  let apps = await Promise.all(appToLoad.map(toLoadPromise));\n  console.log(\"apps: \", apps);\n};\n// 根据路径来装载应用\nconst performAppChanges = async () => {\n  // 卸载不需要的应用、\n  // 去加载需要的应用\n  const { appToUnmount, appToLoad, appToMount } = getAppChanges();\n  // 卸载不需要的应用\n  // 并发卸载\n  let unmountPromises = appToUnmount.map(toUnmountPromise);\n// 这个应用可能需要加载 但是路径不匹配 加载app1的时候， 这个时候切换到app2\n  appToLoad.map(async (app) => {\n    // 将需要被加载的应用拿到--加载--启动--挂载\n    app = await toLoadPromise(app); // 加载\n    app = await toBootstrapPromise(app); // 启动\n    return await toMountPromise(app);\n  });\n  appToMount.map(async (app) => {\n    // 将需要被加载的应用拿到--启动--挂载\n    app = await toBootstrapPromise(app); // 启动\n    return await toMountPromise(app);\n  });\n};\n\n// 这个流程用于初始化\n// 当路径切换 重新加载\n// 重写路由相关方法\n","/**\n *\n * @param {*} name 应用名称\n * @param {*} loadApp 加载的应用\n * @param {*} activeWhen 当激活时会调用\n * @param {*} customProps 自定义属性\n */\n\nimport { reroute } from \"../navigations/reroute\";\nimport {\n  BOOTSTRAPPING,\n  isShouldBeActive,\n  LOADING_SOURCE_CODE,\n  MOUNTED,\n  NOT_BOOTSTRAPPED,\n  NOT_LOADED,\n  NOT_MOUNTED,\n  SKIP_BECAUSE_BROKEN,\n} from \"./app.helpers\";\n\n// 用来放所有的应用\nconst apps = [];\n\n// 维护应用的所有状态 状态机\nexport const registerApplication = (name, loadApp, activeWhen, customProps) => {\n  // 注册引用\n  apps.push({\n    name,\n    loadApp,\n    activeWhen,\n    customProps,\n    status: NOT_LOADED,\n  });\n  console.log(\"apps: \", apps);\n  // 生命周期\n  // reroute 加载应用  被激活的时候就加载应用\n  reroute();\n};\nexport const getAppChanges = () => {\n  const appToUnmount = []; // 要卸载的app\n  const appToLoad = []; // 要加载的app\n  const appToMount = []; // 要挂载的app\n  apps.forEach((app) => {\n    // 需不需要被加载的\n    // 没报错\n    const appShouldBeActive = isShouldBeActive(app);\n    switch (app.status) {\n      case NOT_LOADED:\n      case LOADING_SOURCE_CODE:\n        // 没加载 或者 正在加载代码\n        if (appShouldBeActive) {\n          appToLoad.push(app);\n        }\n        break;\n      case NOT_BOOTSTRAPPED:\n      case BOOTSTRAPPING:\n      case NOT_MOUNTED:\n        if (appShouldBeActive) {\n          appToMount.push(app);\n        }\n        break;\n      case MOUNTED:\n        // 卸载\n        if (!appShouldBeActive) {\n          appToUnmount.push(app);\n        }\n        break;\n      default:\n        break;\n    }\n  });\n  return {\n    appToUnmount,\n    appToLoad,\n    appToMount,\n  };\n};\n","export const a = 1;\nconsole.log(\"a: \", a);\n/**\n * 先制定使用方法 再使用\n * registerApplication start\n */\n\nexport { registerApplication } from \"./application/app.js\";\nexport { start } from \"./start.js\";\n"],"names":[],"mappings":"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"}